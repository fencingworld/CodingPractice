#include <iostream>
#include <stdio.h>
#include <vector>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <sstream>
#include <map>
#define N 10000
#define LEN 20
using namespace std;
struct node {
    char val[LEN];
    unsigned int cnt;
    struct node *next;
} ;
typedef struct node NODE;
void insertHT(NODE* HashTable[],char strs[LEN]) {
    int add=0;
    // scanf("%s",strs);
    for (int j=4,k=1; j<8; j++,k*=10) {
        add+=k*(strs[j]-'0');
    }
//NODE* head=HashTable[add];
    NODE* pt=HashTable[add];
    NODE* pr=HashTable[add];
    while(pt!=NULL&&strcmp(pt->val,strs)!=0) {
        pr=pt;
        pt=pt->next;
    }

    if (pt==NULL) {
        pt=(NODE*)malloc(sizeof(NODE));
        pt->next=NULL;
        pt->cnt=1;
        strcpy(pt->val,strs);
        if (HashTable[add]==NULL) {
            HashTable[add]=pt;
        } else {
            pr->next=pt;
        }

    } else {
        pt->cnt++;
    }
//cout<<".";
}
void searchMax(NODE* HashTable[],char strs[LEN],unsigned int&  vMax,unsigned int& sCnt) {
    vMax=0;
    sCnt=0;
  //  cout<<"d";
    for (int i=0; i<N; i++) {
        NODE* pt=HashTable[i];
        if (NULL!=pt) {

            //   NODE* pr=HashTable[i]->next;
            while(pt!=NULL) {
                if (vMax<pt->cnt) {
                    vMax=pt->cnt;
                    strcpy(strs,pt->val);
                    sCnt=1;
                } else if (vMax==pt->cnt) {
                    if (strcmp(strs,pt->val)>0) {
                        strcpy(strs,pt->val);
                    }
                    sCnt++;
                }
                 pt=pt->next;
            }

        }


    }
}
int main() {
    NODE* HashTable[N];
    memset(HashTable,0,sizeof(HashTable));
    int n;
    cin>>n;

    char strs[20];

    for (int i=0; i<2*n; i++) {
        scanf("%s",strs);
        insertHT(HashTable,strs);
    }


    unsigned int vMax=0;
    unsigned int sCnt=0;
    searchMax(HashTable,strs,vMax,sCnt);

    //int tmp=(1==sCnt)?vMax:sCnt;
    if (1==sCnt) {
        cout<<strs<<" "<<vMax<<endl;
    } else

    {
        cout<<strs<<" "<<vMax<<" "<<sCnt<<endl;
    }



    // cout << "Hello world!" << endl;
    return 0;
}
