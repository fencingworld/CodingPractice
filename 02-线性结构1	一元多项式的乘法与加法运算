#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#define N 1000
using namespace std;
///1307
typedef struct node
{
    int xi;
    int eop;
    struct node * next;
} Node;
void display(Node *p)
{
    Node *pt=NULL,*pr=NULL,*ps=NULL;
    if (p->next==NULL)
    {
        printf("0 0\n");
    }
    else
    {
        for (pt=p->next; pt!=NULL; pt=pt->next)
        {
            printf("%d %d",pt->xi,pt->eop);
            if (pt->next==NULL)
            {
                printf("\n");
            }
            else
            {
                printf(" ");
            }
        }
    }
}
int main()
{
    int i,numA,numB,x,e;
    Node *a=NULL,*b=NULL,*sum=NULL,*mul=NULL;
    Node *pt=NULL,*pr=NULL,*ps=NULL;
    Node *pa=NULL,*pb=NULL;
    scanf("%d",&numA);
    for (i=0; i<numA; i++)
    {
        scanf("%d %d",&x,&e);
        if (x==0)
        {
            continue;
        }

        pt = (Node *)malloc(sizeof(Node));
        pt->xi=x;
        pt->eop=e;
        pt->next=NULL;
        if (a==NULL)
        {
            a=pt;
            pr=pt;
        }
        else
        {
            pr->next=pt;
            pr=pt;
        }
    }
    if (a==NULL)
    {
        pt = (Node *)malloc(sizeof(Node));
        pt->xi=0;
        pt->eop=0;
        pt->next=NULL;
        a=pt;
    }
    scanf("%d",&numB);
    for (i=0; i<numB; i++)
    {

        scanf("%d %d",&x,&e);
        if (x==0)
        {
            continue;
        }

        pt = (Node *)malloc(sizeof(Node));
        pt->xi=x;
        pt->eop=e;
        pt->next=NULL;
        if (b==NULL)
        {
            b=pt;
            pr=pt;
        }
        else
        {
            pr->next=pt;
            pr=pt;
        }
    }
    if (b==NULL)
    {
        pt = (Node *)malloc(sizeof(Node));
        pt->xi=0;
        pt->eop=0;
        pt->next=NULL;
        b=pt;
    }
    ///================
    mul =(Node *)malloc(sizeof(Node));
    mul->next=NULL;
    for (pa=a; pa!=NULL; pa=pa->next)
    {
        // printf("11");
        for (pb=b; pb!=NULL; pb=pb->next)
        {
            pt = (Node *)malloc(sizeof(Node));
            pt->next=NULL;
            pt->xi=pa->xi*pb->xi;
            pt->eop=pa->eop+pb->eop;
            if (mul->next==NULL)
            {
                mul->next=pt;
                pr=mul;
            }
            else
            {
                for (ps=mul->next,pr=mul; ps!=NULL; ps=ps->next,pr=pr->next)
                {
                    if (pt->eop>ps->eop)
                    {
                        pt->next=ps;
                        pr->next=pt;
                        break;
                    }
                    else if (pt->eop==ps->eop)
                    {
                        ps->xi+=pt->xi;
                        if (ps->xi==0)
                        {
                            pr->next=ps->next;
                            free(ps);
                        }
                        else
                        {
                            free(pt);
                        }

                        break;
                    }
                }
                if (ps==NULL)
                {
                    pr->next=pt;
                }
            }

        }
    }
     for (pt=mul->next,pr=mul; pt!=NULL; pt=pt->next,pr=pr->next)
     {
         if (pt->xi==0)
         {
             pr->next=pt->next;
             ps=pr->next;
             free(ps);
         }
     }
    display(mul);

    ///=================================================
    pt=a;
    sum =(Node *)malloc(sizeof(Node));
    sum->next=NULL;
    for (pa=a,pb=b; pa!=NULL&&pb!=NULL;)
    {
        pt = (Node *)malloc(sizeof(Node));
        pt->next =NULL;
        if (pa->eop > pb->eop)
        {

            pt->eop =pa->eop;
            pt->xi  =pa->xi;
            pa      =pa->next;

        }
        else if (pa->eop < pb->eop)
        {
            pt->eop =pb->eop;
            pt->xi  =pb->xi;
            pb      =pb->next;
        }
        else
        {
            pt->eop =pa->eop;
            pt->xi  =pa->xi+pb->xi;
            pb      =pb->next;
            pa      =pa->next;
        }
        if (sum->next==NULL)
        {
            sum->next=pt;
            pr=sum->next;
        }
        else
        {
            pr=pr->next=pt;
        }
    }
    if (pa!=NULL)
    {
        pr->next=pa;
    }
    else
    {
        pr->next=pb;
    }

    for (pt=sum->next,pr=sum; pt!=NULL; pt=pt->next,pr=pr->next)
    {
        if (pt->xi==0)
        {
            pr->next=pt->next;
            ps=pr->next;
            free(ps);
        }
    }
    display(sum);




//   cout << "Hello world!" << endl;
    return 0;
}
